quarkus.banner.enabled=false

# Logging
quarkus.log.level=INFO
quarkus.log.category."cz.amuradon".level=INFO
quarkus.log.file.enable=true
quarkus.log.file.path=application.log

# %test.quarkus.log.level=INFO
%test.quarkus.log.category."okhttp".level=DEBUG
%test.quarkus.log.category."cz.amuradon".level=DEBUG

quarkus.rest-client.mexc-api.url=https://api.mexc.com/api/v3
quarkus.rest-client.mexc-api.scope=jakarta.inject.Singleton
quarkus.rest-client.headers.Accept=application/json
quarkus.rest-client.logging.scope=request-response

# Disable @Startup methods for testing
quarkus.arc.test.disable-application-lifecycle-observers=true

# To allow websocket processing to make I/O - REST, Files
quarkus.websocket.dispatch-to-worker=true

mexc-api.websocket.url=wss://wbs.mexc.com/ws

mexc.apiKey=mx0vgl5eTwQI22AEqq
mexc.secretKey=51c13954c8e043cd9215b9f32c8eaf86

baseAsset=VALOR
quoteAsset=USDT
time=11:00

%test.baseAsset=RX

# Buy order limit price - as of now fixed price
# Valid values: "slippage:60" (60% slippage), "auto" TODO (calculate from order book), 
                "manual:0.00125" (use manually set value),
# ~~"market"~~ (NA, immediately cancelled)
# It seems in first minute, market order is not allowed on MEXC. Was immediately cancelled (MINT).
buyOrder.price=manual:1.0
buyOrder.requestsPerSecond=20
buyOrder.maxAttempts=20

%test.buyOrder.price=manual:0.05

# How many $ to use
usdtVolume=10

# How long (ms) to keep initial order alive if the price goes up the limit price
initialBuyOrder.delayMs=50

# Trailing stop - it serves as both SL/TP, % below highest price
# Trailing TP very tight for some tokens that just pump-n-dump in few seconds (GASP 3s) - identify which ones, e.g. having low volume
trailingStop.below=20

# Trailing stop delay - how to handle individual drops
trailingStop.delayMs=50